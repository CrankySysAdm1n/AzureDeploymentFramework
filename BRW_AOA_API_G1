/*
@TargetNode='LocalHost'
@GeneratedBy=benwilk
@GenerationDate=04/19/2021 16:26:10
@GenerationHost=BENWILK-ASUSMR
*/

instance of DSC_DnsConnectionSuffix as $DSC_DnsConnectionSuffix1ref
{
ModuleName = "NetworkingDsc";
 ModuleVersion = "8.2.0";
 InterfaceAlias = "*Ethernet*";
 RegisterThisConnectionsAddress = True;
 UseSuffixWhenRegistering = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::144::9::DnsConnectionSuffix";
 ConnectionSpecificSuffix = "contoso.com";
 ResourceID = "[DnsConnectionSuffix]contoso.com";
 ConfigurationName = "AppServers";
};
instance of MSFT_xTimeZone as $MSFT_xTimeZone1ref
{
ModuleName = "xTimeZone";
 ModuleVersion = "1.8.0.0";
 IsSingleInstance = "Yes";
 TimeZone = "Eastern Standard Time";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::169::9::xTimeZone";
 ResourceID = "[xTimeZone]timezone";
 ConfigurationName = "AppServers";
};
instance of DSC_HostsFile as $DSC_HostsFile1ref
{
ModuleName = "NetworkingDsc";
 ModuleVersion = "8.2.0";
 HostName = "ACU1-BRW-AOA-G1-api01.haapp.net";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::179::13::HostsFile";
 Ensure = "Present";
 ResourceID = "[HostsFile]ACU1-BRW-AOA-G1-api01.haapp.net";
 IPAddress = "127.0.0.1";
 ConfigurationName = "AppServers";
};
instance of DSC_HostsFile as $DSC_HostsFile2ref
{
ModuleName = "NetworkingDsc";
 ModuleVersion = "8.2.0";
 HostName = "ACU1-BRW-AOA-G1-api02.haapp.net";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::179::13::HostsFile";
 Ensure = "Present";
 ResourceID = "[HostsFile]ACU1-BRW-AOA-G1-api02.haapp.net";
 IPAddress = "127.0.0.1";
 ConfigurationName = "AppServers";
};
instance of DSC_HostsFile as $DSC_HostsFile3ref
{
ModuleName = "NetworkingDsc";
 ModuleVersion = "8.2.0";
 HostName = "ACU1-BRW-AOA-G1-api03.haapp.net";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::179::13::HostsFile";
 Ensure = "Present";
 ResourceID = "[HostsFile]ACU1-BRW-AOA-G1-api03.haapp.net";
 IPAddress = "127.0.0.1";
 ConfigurationName = "AppServers";
};
instance of MSFT_RegistryResource as $MSFT_RegistryResource1ref
{
ModuleName = "PsDesiredStateConfiguration";
 ValueData = {
    "0"
};
 Key = "HKLM:\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\{A509B1A7-37EF-4b3f-8CFC-4F3A74704073}";
 Ensure = "Present";
 SourceInfo = "C:\\Program Files\\WindowsPowerShell\\Modules\\xSystemSecurity\\1.5.1\\DscResources\\xIEEsc\\xIEEsc.schema.psm1::26::5::Registry";
 ValueName = "IsInstalled";
 ValueType = "Dword";
 ResourceID = "[Registry]IEEscKey::[xIEEsc]DisableIEESC";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_RoleResource as $MSFT_RoleResource1ref
{
ModuleName = "PsDesiredStateConfiguration";
 IncludeAllSubFeature = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::235::13::WindowsFeature";
 Ensure = "Present";
 Name = "Web-Server";
 ResourceID = "[WindowsFeature]Web-Server";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_RoleResource as $MSFT_RoleResource2ref
{
ModuleName = "PsDesiredStateConfiguration";
 IncludeAllSubFeature = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::235::13::WindowsFeature";
 Ensure = "Present";
 Name = "RSAT";
 ResourceID = "[WindowsFeature]RSAT";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of DSC_xServiceResource as $DSC_xServiceResource1ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 SourceInfo = "::2::1::xService";
 Name = "ShellHWDetection";
 ResourceID = "[xService]Resource0::[xServiceSet]ServiceSetStopped";
 State = "Stopped";
 ConfigurationName = "AppServers";
};
instance of DSC_Disk as $DSC_Disk1ref
{
ModuleName = "StorageDsc";
 ModuleVersion = "5.0.1";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::267::13::Disk";
 DriveLetter = "F";
 DiskId = "2";
 ResourceID = "[Disk]F";
 ConfigurationName = "AppServers";
};
instance of MSFT_ServiceResource as $MSFT_ServiceResource1ref
{
ModuleName = "PsDesiredStateConfiguration";
 StartupType = "Automatic";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::297::9::Service";
 Name = "MPSSvc";
 ResourceID = "[Service]WindowsFirewall";
 State = "Running";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential1ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_RegistryResource as $MSFT_RegistryResource2ref
{
ModuleName = "PsDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential1ref;
 ValueData = {
    "1"
};
 Key = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\AppModelUnlock";
 Ensure = "Present";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::322::13::Registry";
 ValueName = "AllowDevelopmentWithoutDevLicense";
 ValueType = "Dword";
 ResourceID = "[Registry]AllowDevelopmentWithoutDevLicense";
 Force = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential2ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_RegistryResource as $MSFT_RegistryResource3ref
{
ModuleName = "PsDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential2ref;
 ValueData = {
    "0"
};
 Key = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced";
 Ensure = "Present";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::322::13::Registry";
 ValueName = "DontUsePowerShellOnWinX";
 ValueType = "Dword";
 ResourceID = "[Registry]DontUsePowerShellOnWinX";
 Force = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential3ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_RegistryResource as $MSFT_RegistryResource4ref
{
ModuleName = "PsDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential3ref;
 ValueData = {
    "1"
};
 Key = "HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced";
 Ensure = "Present";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::322::13::Registry";
 ValueName = "TaskbarGlomLevel";
 ValueType = "Dword";
 ResourceID = "[Registry]TaskbarGlomLevel";
 Force = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential4ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_RegistryResource as $MSFT_RegistryResource5ref
{
ModuleName = "PsDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential4ref;
 ValueData = {
    "C:\\Program Files\\PowerShell\\7\\pwsh.exe"
};
 Key = "HKEY_LOCAL_MACHINE\\Software\\OpenSSH";
 Ensure = "Present";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::322::13::Registry";
 ValueName = "DefaultShell";
 ValueType = "String";
 ResourceID = "[Registry]DefaultShell";
 Force = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential5ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_RegistryResource as $MSFT_RegistryResource6ref
{
ModuleName = "PsDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential5ref;
 ValueData = {
    "1"
};
 Key = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Policies\\Microsoft\\MicrosoftEdge\\Main";
 Ensure = "Present";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::322::13::Registry";
 ValueName = "PreventFirstRunPage ";
 ValueType = "Dword";
 ResourceID = "[Registry]PreventFirstRunPage ";
 Force = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential6ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_RegistryResource as $MSFT_RegistryResource7ref
{
ModuleName = "PsDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential6ref;
 ValueData = {
    "1"
};
 Key = "HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\WebManagement\\Server";
 Ensure = "Present";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::322::13::Registry";
 ValueName = "EnableRemoteManagement";
 ValueType = "Dword";
 ResourceID = "[Registry]EnableRemoteManagement";
 Force = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential7ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration1ref
{
ModuleName = "PSDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential7ref;
 DestinationPath = "F:\\Source\\InstallLogs";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::381::13::File";
 ResourceID = "[File]FSourceInstallLogs";
 Type = "Directory";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential8ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration2ref
{
ModuleName = "PSDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential8ref;
 DestinationPath = "F:\\Repos";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::381::13::File";
 ResourceID = "[File]FRepos";
 Type = "Directory";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential9ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration3ref
{
ModuleName = "PSDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential9ref;
 DestinationPath = "c:\\program files\\powershell\\7";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::381::13::File";
 ResourceID = "[File]cprogramfilespowershell7";
 Type = "Directory";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential10ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration4ref
{
ModuleName = "PSDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential10ref;
 DestinationPath = "F:\\WEB\\LogHeadersAPI";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::381::13::File";
 ResourceID = "[File]FWEBLogHeadersAPI";
 Type = "Directory";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential11ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration5ref
{
ModuleName = "PSDesiredStateConfiguration";
 PsDscRunAsCredential = $MSFT_Credential11ref;
 DestinationPath = "F:\\Build";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::381::13::File";
 ResourceID = "[File]FBuild";
 Type = "Directory";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of AZCOPYDSCDir as $AZCOPYDSCDir1ref
{
ModuleName = "AZCOPYDSCDir";
 ModuleVersion = "1.0";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/source/PSModules/";
 DestinationPath = "F:\\Source\\PSModules\\";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::394::13::AZCOPYDSCDir";
 Ensure = "Present";
 LogDir = "F:\\azcopy_logs";
 ResourceID = "[AZCOPYDSCDir]https0blobcorewindowsnetsourcePSModules_FSourcePSModules";
 ConfigurationName = "AppServers";
};
instance of AZCOPYDSCDir as $AZCOPYDSCDir2ref
{
ModuleName = "AZCOPYDSCDir";
 ModuleVersion = "1.0";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/source/Tools/";
 DestinationPath = "F:\\Source\\Tools\\";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::394::13::AZCOPYDSCDir";
 Ensure = "Present";
 LogDir = "F:\\azcopy_logs";
 ResourceID = "[AZCOPYDSCDir]https0blobcorewindowsnetsourceTools_FSourceTools";
 ConfigurationName = "AppServers";
};
instance of AZCOPYDSCDir as $AZCOPYDSCDir3ref
{
ModuleName = "AZCOPYDSCDir";
 ModuleVersion = "1.0";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/source/GIT/";
 DestinationPath = "F:\\Source\\GIT\\";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::394::13::AZCOPYDSCDir";
 Ensure = "Present";
 LogDir = "F:\\azcopy_logs";
 ResourceID = "[AZCOPYDSCDir]https0blobcorewindowsnetsourceGIT_FSourceGIT";
 ConfigurationName = "AppServers";
};
instance of AZCOPYDSCDir as $AZCOPYDSCDir4ref
{
ModuleName = "AZCOPYDSCDir";
 ModuleVersion = "1.0";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/source/PSCore/";
 DestinationPath = "F:\\Source\\PSCore\\";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::394::13::AZCOPYDSCDir";
 Ensure = "Present";
 LogDir = "F:\\azcopy_logs";
 ResourceID = "[AZCOPYDSCDir]https0blobcorewindowsnetsourcePSCore_FSourcePSCore";
 ConfigurationName = "AppServers";
};
instance of AZCOPYDSCDir as $AZCOPYDSCDir5ref
{
ModuleName = "AZCOPYDSCDir";
 ModuleVersion = "1.0";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/source/DotNetCore/";
 DestinationPath = "F:\\Source\\DotNetCore\\";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::394::13::AZCOPYDSCDir";
 Ensure = "Present";
 LogDir = "F:\\azcopy_logs";
 ResourceID = "[AZCOPYDSCDir]https0blobcorewindowsnetsourceDotNetCore_FSourceDotNetCore";
 ConfigurationName = "AppServers";
};
instance of AZCOPYDSCDir as $AZCOPYDSCDir6ref
{
ModuleName = "AZCOPYDSCDir";
 ModuleVersion = "1.0";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/source/ISAPI/";
 DestinationPath = "F:\\Source\\ISAPI\\";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::394::13::AZCOPYDSCDir";
 Ensure = "Present";
 LogDir = "F:\\azcopy_logs";
 ResourceID = "[AZCOPYDSCDir]https0blobcorewindowsnetsourceISAPI_FSourceISAPI";
 ConfigurationName = "AppServers";
};
instance of AppReleaseDSC as $AppReleaseDSC1ref
{
ModuleName = "AppReleaseDSC";
 ComponentName = "LogHeadersAPI";
 DestinationPath = "F:\\WEB\\";
 SourcePath = "https://acu1brwaoag1saglobal.blob.core.windows.net/builds/";
 LogDir = "F:\\azcopy_logs";
 ValidateFileName = "CurrentBuild.txt";
 BuildFileName = "F:\\Build\\LogHeadersAPI\\ComponentBuild.json";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::408::13::AppReleaseDSC";
 DeploySleepWaitSeconds = "10";
 Ensure = "Present";
 ModuleVersion = "1.7";
 EnvironmentName = "G";
 ManagedIdentityClientID = "19f67370-2d9e-4304-8729-f7cac38459bb";
 ResourceID = "[AppReleaseDSC]LogHeadersAPI";
 ConfigurationName = "AppServers";
};
instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration6ref
{
ModuleName = "PSDesiredStateConfiguration";
 SourcePath = "F:\\Source\\PSModules\\PackageManagement\\";
 DestinationPath = "c:\\program files\\WindowsPowershell\\Modules\\PackageManagement\\";
 Force = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::430::13::File";
 Ensure = "Present";
 MatchSource = False;
 ResourceID = "[File]FSourcePSModulesPackageManagementcprogramfilesWindowsPowershellModulesPackageManagement";
 Recurse = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration7ref
{
ModuleName = "PSDesiredStateConfiguration";
 SourcePath = "F:\\Source\\PSModules\\PowerShellGet\\";
 DestinationPath = "c:\\program files\\WindowsPowershell\\Modules\\PowerShellGet\\";
 Force = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::430::13::File";
 Ensure = "Present";
 MatchSource = False;
 ResourceID = "[File]FSourcePSModulesPowerShellGetcprogramfilesWindowsPowershellModulesPowerShellGet";
 Recurse = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration8ref
{
ModuleName = "PSDesiredStateConfiguration";
 SourcePath = "F:\\Source\\PSModules\\oh-my-posh\\";
 DestinationPath = "c:\\program files\\WindowsPowershell\\Modules\\oh-my-posh\\";
 Force = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::430::13::File";
 Ensure = "Present";
 MatchSource = False;
 ResourceID = "[File]FSourcePSModulesohmyposhcprogramfilesWindowsPowershellModulesohmyposh";
 Recurse = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration9ref
{
ModuleName = "PSDesiredStateConfiguration";
 SourcePath = "F:\\Source\\PSModules\\PSReadline\\";
 DestinationPath = "c:\\program files\\WindowsPowershell\\Modules\\PSReadline\\";
 Force = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::430::13::File";
 Ensure = "Present";
 MatchSource = False;
 ResourceID = "[File]FSourcePSModulesPSReadlinecprogramfilesWindowsPowershellModulesPSReadline";
 Recurse = True;

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential12ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_PSModule as $MSFT_PSModule1ref
{
ModuleName = "PackageManagementProviderResource";
 ModuleVersion = "1.0.3";
 PsDscRunAsCredential = $MSFT_Credential12ref;
 InstallationPolicy = "Trusted";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::471::13::PSModule";
 Name = "Az.Resources";
 ResourceID = "[PSModule]Az.Resources";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential13ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_PSModule as $MSFT_PSModule2ref
{
ModuleName = "PackageManagementProviderResource";
 ModuleVersion = "1.0.3";
 PsDscRunAsCredential = $MSFT_Credential13ref;
 InstallationPolicy = "Trusted";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::471::13::PSModule";
 Name = "Az.ManagedServiceIdentity";
 ResourceID = "[PSModule]Az.ManagedServiceIdentity";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential14ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_PSModule as $MSFT_PSModule3ref
{
ModuleName = "PackageManagementProviderResource";
 ModuleVersion = "1.0.3";
 PsDscRunAsCredential = $MSFT_Credential14ref;
 InstallationPolicy = "Trusted";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::471::13::PSModule";
 Name = "Az.Storage";
 ResourceID = "[PSModule]Az.Storage";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential15ref
{
Password = "ContainersAreFun!2020";
 UserName = "brw";

};

instance of MSFT_PSModule as $MSFT_PSModule4ref
{
ModuleName = "PackageManagementProviderResource";
 ModuleVersion = "1.0.3";
 PsDscRunAsCredential = $MSFT_Credential15ref;
 InstallationPolicy = "Trusted";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::471::13::PSModule";
 Name = "Az.Compute";
 ResourceID = "[PSModule]Az.Compute";
 ConfigurationName = "AppServers";
};
instance of MSFT_EnvironmentResource as $MSFT_EnvironmentResource1ref
{
ModuleName = "PsDesiredStateConfiguration";
 Value = ";F:\\Source\\Tools\\SysInternals;F:\\Source\\Tools\\;F:\\Source\\Tools\\.vs-kubernetes\\tools\\helm\\windows-amd64;F:\\Source\\Tools\\.vs-kubernetes\\tools\\kubectl;F:\\Source\\Tools\\.vs-kubernetes\\tools\\minikube\\windows-amd64;F:\\Source\\Tools\\.vs-kubernetes\\tools\\draft\\windows-amd64";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::537::9::Environment";
 Path = True;
 Name = "Path";
 ResourceID = "[Environment]PATH";

ModuleVersion = "0.0";
 ConfigurationName = "AppServers";
};
instance of MSFT_xWebSite as $MSFT_xWebSite1ref
{
ModuleName = "xWebAdministration";
 ModuleVersion = "3.2.0";
 PhysicalPath = "C:\\inetpub\\wwwroot";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::562::13::xWebsite";
 Ensure = "Absent";
 Name = "Default Web Site";
 ResourceID = "[xWebSite]DefaultWebSite";
 State = "Stopped";

DependsOn = {
    "[WindowsFeature]Web-Server",
     "[WindowsFeature]RSAT"};
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential16ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of MSFT_xWebAppPool as $MSFT_xWebAppPool1ref
{
ModuleName = "xWebAdministration";
 ModuleVersion = "3.2.0";
 enable32BitAppOnWin64 = False;
 managedRuntimeVersion = "";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::578::13::xWebAppPool";
 identityType = "SpecificUser";
 autoStart = True;
 Name = "G1api";
 ResourceID = "[xWebAppPool]0api";
 Credential = $MSFT_Credential16ref;
 State = "Started";

DependsOn = {
    "[xService]Resource0::[xServiceSet]ServiceSetStarted"};
 ConfigurationName = "AppServers";
};
instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation1ref
{
HostName = "ACU1-BRW-AOA-G1-api01.haapp.net";
 Port = 80;
 Protocol = "http";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation2ref
{
HostName = "ACU1-BRW-AOA-G1-api01.haapp.net";
 Port = 443;
 Protocol = "https";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation3ref
{
HostName = "ACU1-BRW-AOA-G1-api02.haapp.net";
 Port = 80;
 Protocol = "http";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation4ref
{
HostName = "ACU1-BRW-AOA-G1-api02.haapp.net";
 Port = 443;
 Protocol = "https";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation5ref
{
HostName = "ACU1-BRW-AOA-G1-api03.haapp.net";
 Port = 80;
 Protocol = "http";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation6ref
{
HostName = "ACU1-BRW-AOA-G1-api03.haapp.net";
 Port = 443;
 Protocol = "https";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation7ref
{
HostName = "ACU1-BRW-AOA-G1-afd01-plb01.haapp.net";
 Port = 80;
 Protocol = "http";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation8ref
{
HostName = "ACU1-BRW-AOA-G1-afd01-plb01.haapp.net";
 Port = 443;
 Protocol = "https";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation9ref
{
HostName = "*";
 Port = 80;
 Protocol = "http";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebBindingInformation as $MSFT_xWebBindingInformation10ref
{
HostName = "*";
 Port = 443;
 Protocol = "https";
 CertificateStoreName = "My";
 IPAddress = "*";
 CertificateThumbprint = "8148CEA6B4B85FFF2BA4C6C05F48659241F6610B";

};

instance of MSFT_xWebSite as $MSFT_xWebSite2ref
{
ModuleName = "xWebAdministration";
 ModuleVersion = "3.2.0";
 PhysicalPath = "F:\\WEB\\LogHeadersAPI";
 ApplicationPool = "G1api";
 BindingInfo = {
    $MSFT_xWebBindingInformation1ref,
    $MSFT_xWebBindingInformation2ref,
    $MSFT_xWebBindingInformation3ref,
    $MSFT_xWebBindingInformation4ref,
    $MSFT_xWebBindingInformation5ref,
    $MSFT_xWebBindingInformation6ref,
    $MSFT_xWebBindingInformation7ref,
    $MSFT_xWebBindingInformation8ref,
    $MSFT_xWebBindingInformation9ref,
    $MSFT_xWebBindingInformation10ref
};
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::597::13::xWebsite";
 Name = "G1api";
 ResourceID = "[xWebSite]0api";
 State = "Started";
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential17ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of DSC_xPackageResource as $DSC_xPackageResource1ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 PsDscRunAsCredential = $MSFT_Credential17ref;
 Arguments = "/silent /norestart";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::760::13::xPackage";
 Ensure = "Present";
 Path = "F:\\Source\\Tools\\vscode\\VSCodeSetup-x64-1.25.0.exe";
 Name = "Microsoft Visual Studio Code";
 ResourceID = "[xPackage]MicrosoftVisualStudioCode";
 ProductId = "";

DependsOn = {
    "[File]FSourcePSModulesPackageManagementcprogramfilesWindowsPowershellModulesPackageManagement",
     "[File]FSourcePSModulesPowerShellGetcprogramfilesWindowsPowershellModulesPowerShellGet",
     "[File]FSourcePSModulesohmyposhcprogramfilesWindowsPowershellModulesohmyposh",
     "[File]FSourcePSModulesPSReadlinecprogramfilesWindowsPowershellModulesPSReadline"};
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential18ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of DSC_xPackageResource as $DSC_xPackageResource2ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 PsDscRunAsCredential = $MSFT_Credential18ref;
 Arguments = "/VERYSILENT";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::760::13::xPackage";
 Ensure = "Present";
 Path = "F:\\Source\\GIT\\Git-2.23.0-64-bit.exe";
 Name = "Git version 2.23.0.windows.1";
 ResourceID = "[xPackage]Gitversion2230windows1";
 ProductId = "";

DependsOn = {
    "[File]FSourcePSModulesPackageManagementcprogramfilesWindowsPowershellModulesPackageManagement",
     "[File]FSourcePSModulesPowerShellGetcprogramfilesWindowsPowershellModulesPowerShellGet",
     "[File]FSourcePSModulesohmyposhcprogramfilesWindowsPowershellModulesohmyposh",
     "[File]FSourcePSModulesPSReadlinecprogramfilesWindowsPowershellModulesPSReadline"};
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential19ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of DSC_xPackageResource as $DSC_xPackageResource3ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 PsDscRunAsCredential = $MSFT_Credential19ref;
 Arguments = "ADD_EXPLORER_CONTEXT_MENU_OPENPOWERSHELL=1 REGISTER_MANIFEST=1";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::760::13::xPackage";
 Ensure = "Present";
 Path = "F:\\Source\\PSCore\\PowerShell-7.1.2-win-x64.msi";
 Name = "PowerShell 7-x64";
 ResourceID = "[xPackage]PowerShell7x64";
 ProductId = "{357A3946-1572-4A21-9B60-4C7BD1BB9761}";

DependsOn = {
    "[File]FSourcePSModulesPackageManagementcprogramfilesWindowsPowershellModulesPackageManagement",
     "[File]FSourcePSModulesPowerShellGetcprogramfilesWindowsPowershellModulesPowerShellGet",
     "[File]FSourcePSModulesohmyposhcprogramfilesWindowsPowershellModulesohmyposh",
     "[File]FSourcePSModulesPSReadlinecprogramfilesWindowsPowershellModulesPSReadline"};
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential20ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of DSC_xPackageResource as $DSC_xPackageResource4ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 PsDscRunAsCredential = $MSFT_Credential20ref;
 Arguments = "/install /q /norestart";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::760::13::xPackage";
 Ensure = "Present";
 Path = "F:\\Source\\DotNetCore\\dotnet-hosting-5.0.4-win.exe";
 Name = "Microsoft ASP.NET Core 5.0.4 Shared Framework (x64)";
 ResourceID = "[xPackage]MicrosoftASPNETCore504SharedFrameworkx64";
 ProductId = "";

DependsOn = {
    "[File]FSourcePSModulesPackageManagementcprogramfilesWindowsPowershellModulesPackageManagement",
     "[File]FSourcePSModulesPowerShellGetcprogramfilesWindowsPowershellModulesPowerShellGet",
     "[File]FSourcePSModulesohmyposhcprogramfilesWindowsPowershellModulesohmyposh",
     "[File]FSourcePSModulesPSReadlinecprogramfilesWindowsPowershellModulesPSReadline"};
 ConfigurationName = "AppServers";
};
instance of MSFT_Credential as $MSFT_Credential21ref
{
Password = "ContainersAreFun!2020";
 UserName = "contoso\\brw";

};

instance of DSC_xPackageResource as $DSC_xPackageResource5ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 PsDscRunAsCredential = $MSFT_Credential21ref;
 Arguments = "";
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::760::13::xPackage";
 Ensure = "Present";
 Path = "F:\\Source\\ISAPI\\rewrite_amd64_en-US.msi";
 Name = "IIS URL Rewrite Module 2";
 ResourceID = "[xPackage]IISURLRewriteModule2";
 ProductId = "{9BCA2118-F753-4A1E-BCF3-5A820729965C}";

DependsOn = {
    "[File]FSourcePSModulesPackageManagementcprogramfilesWindowsPowershellModulesPackageManagement",
     "[File]FSourcePSModulesPowerShellGetcprogramfilesWindowsPowershellModulesPowerShellGet",
     "[File]FSourcePSModulesohmyposhcprogramfilesWindowsPowershellModulesohmyposh",
     "[File]FSourcePSModulesPSReadlinecprogramfilesWindowsPowershellModulesPSReadline"};
 ConfigurationName = "AppServers";
};
instance of DSC_xServiceResource as $DSC_xServiceResource2ref
{
ModuleName = "xPSDesiredStateConfiguration";
 ModuleVersion = "9.1.0";
 StartupType = "Automatic";
 SourceInfo = "::2::1::xService";
 Name = "WMSVC";
 ResourceID = "[xService]Resource0::[xServiceSet]ServiceSetStarted";
 State = "Running";
 ConfigurationName = "AppServers";
};
instance of MSFT_xPendingReboot as $MSFT_xPendingReboot1ref
{
ModuleName = "xPendingReboot";
 ModuleVersion = "0.4.0.0";
 SkipCcmClientSDK = True;
 SkipPendingFileRename = True;
 SourceInfo = "D:\\Repos\\ADF\\ADF\\ext-DSC\\DSC-AppServers.ps1::872::9::xPendingReboot";
 SkipComponentBasedServicing = True;
 Name = "RebootForPackageInstall";
 ResourceID = "[xPendingReboot]RebootForPackageInstall";
 SkipWindowsUpdate = True;

DependsOn = {
    "[xPackage]MicrosoftVisualStudioCode",
     "[xPackage]Gitversion2230windows1",
     "[xPackage]PowerShell7x64",
     "[xPackage]MicrosoftASPNETCore504SharedFrameworkx64",
     "[xPackage]IISURLRewriteModule2"};
 ConfigurationName = "AppServers";
};
instance of OMI_ConfigurationDocument

                    {
 Version="2.0.0";

                        MinimumCompatibleVersion = "2.0.0";

                        CompatibleVersionAdditionalProperties= {"Omi_BaseResource:ConfigurationName"};

                        Author="benwilk";

                        GenerationDate="04/19/2021 16:26:10";

                        GenerationHost="BENWILK-ASUSMR";

                        Name="AppServers";

                    };
