{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Deployment": {
      "type": "string"
    },
    "DeploymentID": {
      "type": "string"
    },
    "Environment": {
      "type": "string"
    },
    "frontDoorInfo": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "Stage": {
      "type": "object"
    },
    "OMSworkspaceID": {
      "type": "string"
    }
  },
  "variables": {

    "copy": [
      {
        "name": "frontendEndpoints",
        "count": "[length(parameters('frontDoorInfo').services)]",
        "input": {
          "name": "[concat(parameters('frontDoorInfo').services[copyIndex('frontendEndpoints')].name,'-azurefd-net')]",
          "properties": {
            "hostName": "[concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').services[copyIndex('frontendEndpoints')].FriendlyName,'.azurefd.net')]",
            "sessionAffinityEnabledState": "[parameters('frontDoorInfo').services[copyIndex('frontendEndpoints')].sessionAffinityEnabledState]",
            "sessionAffinityTtlSeconds": 0,
            "customHttpsConfiguration": null
            // "webApplicationFirewallPolicyLink": {
            //   "id": "string"
            // }
          }
        }
      },
      {
        "name": "healthProbeSettings",
        "count": "[length(parameters('frontDoorInfo').probes)]",
        "input": {
          "name": "[parameters('frontDoorInfo').probes[copyIndex('healthProbeSettings')].name]",
          "properties": {
            "path": "[parameters('frontDoorInfo').probes[copyIndex('healthProbeSettings')].ProbePath]",
            "protocol": "Https",
            "intervalInSeconds": 30,
            "healthProbeMethod": "Head",
            "enabledState": "Enabled"
          }
        }
      },
      {
        "name": "loadBalancingSettings",
        "count": "[length(parameters('frontDoorInfo').LBSettings)]",
        "input": {
          "name": "[parameters('frontDoorInfo').LBSettings[copyIndex('loadBalancingSettings')].name]",
          "properties": {
            "sampleSize": "[parameters('frontDoorInfo').LBSettings[copyIndex('loadBalancingSettings')].sampleSize]",
            "successfulSamplesRequired": "[parameters('frontDoorInfo').LBSettings[copyIndex('loadBalancingSettings')].successfulSamplesRequired]",
            "additionalLatencyMilliseconds": "[parameters('frontDoorInfo').LBSettings[copyIndex('loadBalancingSettings')].additionalLatencyMilliseconds]"
          }
        }
      },
      {
        "name": "backendPools",
        "count": "[length(parameters('frontDoorInfo').services)]",
        "input": {
          "name": "[parameters('frontDoorInfo').services[copyIndex('backendPools')].Name]",
          "properties": {
            "backends": [
              {
                "address": "[parameters('frontDoorInfo').services[copyIndex('backendPools')].BEAddress]",
                "privateLinkResourceId": null,
                "privateLinkLocation": null,
                "privateEndpointStatus": null,
                "privateLinkApprovalMessage": null,
                "enabledState": "Enabled",
                "httpPort": 80,
                "httpsPort": 443,
                "priority": 1,
                "weight": 50,
                "backendHostHeader": "[parameters('frontDoorInfo').services[copyIndex('backendPools')].BEAddress]"
              }
            ],
            "loadBalancingSettings": {
              "id": "[resourceId('Microsoft.Network/frontdoors/loadBalancingSettings',
                                      concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').services[copyIndex('backendPools')].Name),
                                      parameters('frontDoorInfo').services[copyIndex('backendPools')].LBSettings)]"
            },
            "healthProbeSettings": {
              "id": "[resourceId('Microsoft.Network/frontdoors/healthProbeSettings',
                                      concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').services[copyIndex('backendPools')].Name),
                                      parameters('frontDoorInfo').services[copyIndex('backendPools')].ProbeName)]"
            }
          }
        }
      },
      {
        "name": "routingRules",
        "count": "[length(parameters('frontDoorInfo').services)]",
        "input": {
          "name": "[parameters('frontDoorInfo').services[copyIndex('routingRules')].Name]",
          "properties": {
            "frontendEndpoints": [
              {
                "id": "[resourceId('Microsoft.Network/frontdoors/frontendEndpoints',
                                      concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').services[copyIndex('routingRules')].Name),
                                      concat(parameters('frontDoorInfo').services[copyIndex('routingRules')].Name,'-azurefd-net'))]"
              }
            ],
            "acceptedProtocols": [
              "Http",
              "Https"
            ],
            "patternsToMatch": "[parameters('frontDoorInfo').services[copyIndex('routingRules')].patternsToMatch]",
            "enabledState": "Enabled",
            "routeConfiguration": {
              "@odata.type": "#Microsoft.Azure.FrontDoor.Models.FrontdoorForwardingConfiguration",
              "customForwardingPath": null,
              "forwardingProtocol": "HttpsOnly",
              "backendPool": {
                "id": "[resourceId('Microsoft.Network/frontdoors/backendPools',
                                      concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').services[copyIndex('routingRules')].Name),
                                      parameters('frontDoorInfo').services[copyIndex('routingRules')].Name)]"
              },
              "cacheConfiguration": null
            }
          }
        }
      }
    ]
  },
  "resources": [
    {
      "name": "[concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').name)]",
      "apiVersion": "2020-05-01",
      "type": "Microsoft.Network/frontdoors",
      "location": "global",
      "properties": {
        "friendlyName": "[parameters('frontDoorInfo').name]",
        "enabledState": "Enabled",
        "frontendEndpoints": "[variables('frontendEndpoints')]",
        "healthProbeSettings": "[variables('healthProbeSettings')]",
        "loadBalancingSettings": "[variables('loadBalancingSettings')]",
        "backendPools": "[variables('backendPools')]",
        "routingRules": "[variables('routingRules')]",
        "backendPoolsSettings": {
          "enforceCertificateNameCheck": "Enabled",
          "sendRecvTimeoutSeconds": 30
        }
      },
      "resources": [
        {
          "name": "Microsoft.Insights/service",
          "type": "providers/diagnosticSettings",
          "dependsOn": [
            "[concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').name)]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "workspaceId": "[parameters('OMSworkspaceID')]",
            "logs": [
              {
                "category": "FrontdoorAccessLog",
                "enabled": true
              },
              {
                "category": "FrontdoorWebApplicationFirewallLog",
                "enabled": true
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT5M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ]
    },
    {
      "condition": "[equals(parameters('Stage').SetFRONTDOORDNS,1)]",
      "apiVersion": "2020-06-01",
      "name": "[concat('setdns',copyIndex(0))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[if(contains(parameters('global'),'DomainNameExtRG'),parameters('global').DomainNameExtRG,parameters('global').GlobalRGName)]",
      "subscriptionId": "[if(contains(parameters('global'),'DomainNameExtSubscriptionID'),parameters('global').DomainNameExtSubscriptionID,parameters('global').SubscriptionID)]",
      "copy": {
        "name": "FDDNSLoop",
        "count": "[length( parameters('frontDoorInfo').services )]"
      },
      "dependsOn": [
        "[concat(parameters('Deployment'),'-afd',parameters('frontDoorInfo').name)]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "name": "[toLower(concat(parameters('global').DomainNameExt,'/',parameters('frontDoorInfo').services[copyIndex(0)].Name))]",
              "apiVersion": "2017-09-01",
              "properties": {
                "metadata": {},
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "[parameters('frontDoorInfo').services[copyIndex(0)].BEAddress]"
                }
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {
  }
}