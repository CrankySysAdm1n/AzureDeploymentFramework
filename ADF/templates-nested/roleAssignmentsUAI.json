{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Deployment": {
      "type": "string"
    },
    "RGName": {
      "type": "string"
    },
    "Prefix": {
      "type": "string"
    },
    "Enviro": {
      "type": "string"
    },
    "rolesInfo": {
      "type": "array"
    },
    "RolesLookup": {
      "type": "object"
    },
    "RolesGroupsLookup": {
      "type": "object"
    },
    "uaiInfo": {
      "type": "object"
    }
  },
  "variables": {
  },
  "resources": [
    {
      // For user/group assigned RBAC in RG, run in deployment for easier troubleshooting
      "name": "[concat('dpRoleAssignment-UAI-', parameters('uaiInfo').Name,'-',copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-05-01",
      "resourceGroup": "[if(contains(parameters('uaiInfo').RBAC[CopyIndex(0)],'RG'),replace(parameters('RGName'),parameters('Enviro'),parameters('uaiInfo').RBAC[CopyIndex(0)].RG),resourceGroup().name)]",
      "dependsOn": [
      ],
      "copy": {
        "name": "uaiRGRoleAssignmentLoop",
        "count": "[length( parameters('uaiInfo').RBAC )]"
      },
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
          },
          "variables": {
          },
          "resources": [
            {
              // setup the Managed service user identity with storage account key operator on the Local Storage
              // 81a9662b-bebf-436f-a333-f67b29880f12 <-- Storage Account Key Operator Service Role
              "type": "Microsoft.Authorization/roleAssignments",
              "name": "[guid(parameters('uaiInfo').RBAC[CopyIndex(0)].Name,parameters('Prefix'),'-',if(contains(parameters('uaiInfo').RBAC[CopyIndex(0)],'RG'),parameters('uaiInfo').RBAC[CopyIndex(0)].RG,parameters('Enviro')),'-uai',parameters('uaiInfo').Name)]",
              "apiVersion": "2018-01-01-preview",
              "properties": {
                "roleDefinitionId": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/',parameters('RolesGroupsLookup')[parameters('uaiInfo').RBAC[CopyIndex(0)].Name].Id)]",
                "principalId": "[if(equals(parameters('Enviro'),'G0'),'',reference(concat(subscription().Id,'/resourceGroups/',resourceGroup().name, '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/',parameters('Deployment'),'-uai',parameters('uaiInfo').Name),'2018-11-30').principalId)]",
                "scope": "[if(contains(parameters('uaiInfo').RBAC[CopyIndex(0)],'RG'),concat(subscription().Id,'/resourceGroups/',replace(parameters('RGName'),parameters('Enviro'),parameters('uaiInfo').RBAC[CopyIndex(0)].RG)),resourceGroup().id)]"
              }
            }
            // {
            //   // setup the Managed service user identity with storage account key operator on the Local Storage
            //   // 81a9662b-bebf-436f-a333-f67b29880f12 <-- Storage Account Key Operator Service Role
            //   "type": "Microsoft.Authorization/roleAssignments",
            //   "name": "[guid('Storage Account Key Operator Service Role',parameters('Prefix'),'-',variables('Enviro'),'-uaiStorageAccountOperator')]",
            //   "apiVersion": "2018-01-01-preview",
            //   "properties": {
            //     "roleDefinitionId": "[concat(subscription().Id, '/providers/Microsoft.Authorization/roleDefinitions/',variables('RolesGroupsLookup')['Storage Account Key Operator Service Role'].Id)]",
            //     "principalId": "[if(equals(concat(parameters('Environment'),parameters('DeploymentID')),'G0'),'',reference(concat(subscription().Id,'/resourceGroups/',variables('RGName'), '/providers/Microsoft.ManagedIdentity/userAssignedIdentities/',variables('Deployment'),'-uaiStorageAccountOperator'),'2018-11-30').principalId)]",
            //     "scope": "[variables('RGID')]"
            //   }
            // }
          ]
        }
      }
    }
  ],
  "outputs" : {
    // "output1": {
    //   "type": "string",
    //   // "value": "[if(contains(parameters('uaiInfo').RBAC[0],'RG'),parameters('Enviro'),resourceGroup().id)]"
    //   "value": "[if(contains(parameters('uaiInfo').RBAC[0],'RG'),concat(subscription().Id,'/resourceGroups/',replace(parameters('RGName'),parameters('Enviro'),parameters('uaiInfo').RBAC[0].RG)),resourceGroup().id)]"

    // }
  }
}