{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Deployment": {
      "type": "string"
    },
    "DeploymentID": {
      "type": "string"
    },
    "VMName" : {
      "type": "string"
    },
    "DATA": {
      "type": "object",
      "defaultValue": {}
    },
    "DATASS": {
      "type": "object",
      "defaultValue": {}
    },
    "SOFS": {
      "type": "object",
      "defaultValue": {}
    },
    "LOGS": {
      "type": "object",
      "defaultValue": {"1":1}
    },
    "TEMPDB": {
      "type": "object",
      "defaultValue": {"1":1}
    },
    "BACKUP": {
      "type": "object",
      "defaultValue": {"1":1}
    },
    "Global": {
      "type": "object"
    }
  },
  "variables": {

    "copy": [
      {
        "name": "Data",
        "count": "[Length(parameters('Data').LUNS)]",
        "input": {
          "name": "[concat(parameters('Deployment'),'-', parameters('VMName'),'-DATA-DATA' , padLeft( parameters('Data').LUNS[copyIndex('Data')][0],2,'0'))]",
          "lun": "[int(parameters('Data').LUNS[copyIndex('Data')][0])]",
          "caching": "[parameters('Data').caching )]",
          "diskSizeGB": "[int(parameters('Data').LUNS[copyIndex('Data')][1])]",
          "createOption": "[if(equals(length(parameters('Data').LUNS[copyIndex('Data')]),3),parameters('Data').LUNS[copyIndex('Data')][2],'Empty')]",
          "managedDisk": "[if(contains(parameters('Data'),'saType') ,json( concat('{\"storageAccountType\":\"',parameters('Data').saType,'\"}')),json('null'))]"
        }
      },
      {
        "name": "Datass",
        "count": "[Length(parameters('Datass').LUNS)]",
        "input": {
          // "name": "[concat(parameters('Deployment'),'-', parameters('VMName'),'-DATA-DATA' , padLeft( parameters('Datass').LUNS[copyIndex('Datass')][0],2,'0')) )]",
          "lun": "[int(parameters('Datass').LUNS[copyIndex('Datass')][0])]",
          "caching": "[parameters('Datass').caching]",
          "diskSizeGB": "[int(parameters('Datass').LUNS[copyIndex('Datass')][1])]",
          "createOption": "[if(equals(length(parameters('Datass').LUNS[copyIndex('Datass')]),3),parameters('Datass').LUNS[copyIndex('Datass')][2],'Empty')]",
          "managedDisk": "[if(contains(parameters('Datass'),'saType') ,json( concat('{\"storageAccountType\":\"',parameters('Datass').saType,'\"}')),json('null'))]"
        }
      },
      {
        "name": "SOFS",
        "count": "[Length(parameters('SOFS').LUNS)]",
        "input": {
          "name": "[ concat(parameters('Deployment'),'-', parameters('VMName'),'-DATA-SOFS' , padLeft( parameters('SOFS').LUNS[copyIndex('SOFS')][0],2,'0'))]",
          "lun": "[ int(parameters('SOFS').LUNS[copyIndex('SOFS')][0])]",
          "caching": "[ parameters('SOFS').caching]",
          "diskSizeGB": "[ int(parameters('SOFS').LUNS[copyIndex('SOFS')][1])]",
          "createOption": "[if(equals(length(parameters('SOFS').LUNS[copyIndex('SOFS')]),3),parameters('SOFS').LUNS[copyIndex('SOFS')][2],'Empty')]",
          "managedDisk": "[ if(contains(parameters('SOFS'),'saType') ,json( concat('{\"storageAccountType\":\"',parameters('SOFS').saType,'\"}')),json('null'))]"
        }
      },
      {
        "name": "LOGS",
        "count": "[Length(parameters('LOGS').LUNS)]",
        "input": {
          "name": "[ concat(parameters('Deployment'),'-', parameters('VMName'),'-DATA-LOGS' , padLeft( parameters('LOGS').LUNS[copyIndex('LOGS')][0],2,'0'))]",
          "lun": "[ int(parameters('LOGS').LUNS[copyIndex('LOGS')][0])]",
          "caching": "[ parameters('LOGS').caching]",
          "diskSizeGB": "[ int(parameters('LOGS').LUNS[copyIndex('LOGS')][1])]",
          "createOption": "[if(equals(length(parameters('LOGS').LUNS[copyIndex('LOGS')]),3),parameters('LOGS').LUNS[copyIndex('LOGS')][2],'Empty')]",
          "managedDisk": "[ if(contains(parameters('LOGS'),'saType') ,json( concat('{\"storageAccountType\":\"',parameters('LOGS').saType,'\"}')),json('null'))]"
        }
      },
      {
        "name": "TEMPDB",
        "count": "[Length(parameters('TEMPDB').LUNS)]",
        "input": {
          "name": "[ concat(parameters('Deployment'),'-', parameters('VMName'),'-DATA-TEMPDB' , padLeft( parameters('TEMPDB').LUNS[copyIndex('TEMPDB')][0],2,'0'))]",
          "lun": "[ int(parameters('TEMPDB').LUNS[copyIndex('TEMPDB')][0])]",
          "caching": "[ parameters('TEMPDB').caching]",
          "diskSizeGB": "[ int(parameters('TEMPDB').LUNS[copyIndex('TEMPDB')][1])]",
          "createOption": "[if(equals(length(parameters('TEMPDB').LUNS[copyIndex('TEMPDB')]),3),parameters('TEMPDB').LUNS[copyIndex('TEMPDB')][2],'Empty')]",
          "managedDisk": "[ if(contains(parameters('TEMPDB'),'saType') ,json( concat('{\"storageAccountType\":\"',parameters('TEMPDB').saType,'\"}')),json('null'))]"
        }
      },
      {
        "name": "BACKUP",
        "count": "[Length(parameters('BACKUP').LUNS)]",
        "input": {
          "name": "[ concat(parameters('Deployment'),'-', parameters('VMName'),'-DATA-BACKUP' , padLeft( parameters('BACKUP').LUNS[copyIndex('BACKUP')][0],2,'0'))]",
          "lun": "[ int(parameters('BACKUP').LUNS[copyIndex('BACKUP')][0])]",
          "caching": "[ parameters('BACKUP').caching]",
          "diskSizeGB": "[ int(parameters('BACKUP').LUNS[copyIndex('BACKUP')][1])]",
          "createOption": "[if(equals(length(parameters('BACKUP').LUNS[copyIndex('BACKUP')]),3),parameters('BACKUP').LUNS[copyIndex('BACKUP')][2],'Empty')]",
          "managedDisk": "[ if(contains(parameters('BACKUP'),'saType') ,json( concat('{\"storageAccountType\":\"',parameters('BACKUP').saType,'\"}')),json('null'))]"
        }
      }
    ]



  },
  "functions": [
     
  ],
  "resources": [
    
  ],
  "outputs": {
    "SOFS": {
      "type": "array",
      "value": "[if( contains(parameters('SOFS'),'1'),array('no SOFS disks'),variables('SOFS'))]"
    },
    "DATA": {
      "type": "array",
      "value": "[if( contains(parameters('Data'),'1'),array('no DATA disks'),variables('Data'))]"
    },
    "DATASS": {
      "type": "array",
      "value": "[if( contains(parameters('Datass'),'1'),array('no DATA disks'),variables('Datass'))]"
    },
    "LOGS": {
      "type": "array",
      "value": "[if(contains(parameters('LOGS'),'1'),array('no LOGS disks'),variables('LOGS'))]"
    },
    "TEMPDB": {
      "type": "array",
      "value": "[if(contains(parameters('TEMPDB'),'1'),array('no TEMPDB disks'),variables('TEMPDB'))]"
    },
    "BACKUP": {
      "type": "array",
      "value": "[if(contains(parameters('BACKUP'),'1'),array('no BACKUP disks'),variables('BACKUP'))]"
    },
    "DATADisks": {
      "type": "array",
      "value": "[union(
                        if(contains(parameters('SOFS'),'1'),'[]', variables('SOFS') ),
                        if(contains(parameters('Data'),'1'),'[]', variables('Data') ),
                        if(contains(parameters('Datass'),'1'),'[]', variables('Datass') ),
                        if(contains(parameters('LOGS'),'1'),'[]', variables('LOGS') ) ,
                        if(contains(parameters('TEMPDB'),'1'),'[]', variables('TEMPDB') ),
                        if(contains(parameters('BACKUP'),'1'),'[]', variables('BACKUP') )
                      )]"
    }
  }
}