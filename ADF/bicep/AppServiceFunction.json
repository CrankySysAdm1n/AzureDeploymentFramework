{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.1019.29181",
      "templateHash": "2949401154007981292"
    }
  },
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "ACU1",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "T",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "vmAdminPassword": {
      "type": "secureString"
    },
    "devOpsPat": {
      "type": "secureString"
    },
    "sshPublic": {
      "type": "secureString"
    }
  },
  "functions": [],
  "variables": {
    "copy": [
      {
        "name": "DNSServers",
        "count": "[length(variables('DNSServerList'))]",
        "input": "[if(lessOrEquals(length(variables('DNSServerList')[copyIndex('DNSServers')]), 3), format('{0}.{1}', variables('networkId'), variables('DNSServerList')[copyIndex('DNSServers')]), variables('DNSServerList')[copyIndex('DNSServers')])]"
      },
      {
        "name": "WSInfo",
        "count": "[length(variables('WebSiteInfo'))]",
        "input": {
          "match": "[or(equals(parameters('Global').CN, '.'), contains(parameters('Global').CN, variables('WebSiteInfo')[copyIndex('WSInfo')].name))]",
          "saName": "[toLower(format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex('WSInfo')].saname))]"
        }
      }
    ],
    "Deployment": "[format('{0}-{1}-{2}-{3}{4}', parameters('Prefix'), parameters('Global').OrgName, parameters('Global').Appname, parameters('Environment'), parameters('DeploymentID'))]",
    "DeploymentURI": "[toLower(format('{0}{1}{2}{3}{4}', parameters('Prefix'), parameters('Global').OrgName, parameters('Global').Appname, parameters('Environment'), parameters('DeploymentID')))]",
    "OMSworkspaceName": "[format('{0}LogAnalytics', variables('DeploymentURI'))]",
    "OMSworkspaceID": "[resourceId('Microsoft.OperationalInsights/workspaces/', variables('OMSworkspaceName'))]",
    "AppInsightsName": "[format('{0}AppInsights', variables('DeploymentURI'))]",
    "AppInsightsID": "[resourceId('Microsoft.insights/components/', variables('AppInsightsName'))]",
    "networkId": "[format('{0}{1}', parameters('Global').networkid[0], string(sub(parameters('Global').networkid[1], mul(2, int(parameters('DeploymentID'))))))]",
    "AzureDNS": "168.63.129.16",
    "DNSServerList": "[if(contains(parameters('DeploymentInfo'), 'DNSServers'), parameters('DeploymentInfo').DNSServers, parameters('Global').DNSServers)]",
    "WebSiteInfo": "[if(contains(parameters('DeploymentInfo'), 'FunctionInfo'), parameters('DeploymentInfo').FunctionInfo, createArray())]",
    "myAppConfig": {
      "abc": "value",
      "def": "value"
    }
  },
  "resources": [
    {
      "condition": "[variables('WSInfo')[copyIndex()].match]",
      "copy": {
        "name": "functionApp",
        "count": "[length(variables('WebSiteInfo'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[format('dp{0}-fn{1}', variables('Deployment'), variables('WebSiteInfo')[copyIndex()].Name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ws": {
            "value": "[variables('WebSiteInfo')[copyIndex()]]"
          },
          "appprefix": {
            "value": "fn"
          },
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DeploymentURI": {
            "value": "[variables('DeploymentURI')]"
          },
          "OMSworkspaceID": {
            "value": "[variables('OMSworkspaceID')]"
          },
          "Global": {
            "value": "[parameters('Global')]"
          },
          "diagLogs": {
            "value": [
              {
                "category": "FunctionAppLogs",
                "enabled": true,
                "retentionPolicy": {
                  "days": 30,
                  "enabled": false
                }
              }
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1019.29181",
              "templateHash": "3510492911187977675"
            }
          },
          "parameters": {
            "ws": {
              "type": "object"
            },
            "appprefix": {
              "type": "string"
            },
            "Deployment": {
              "type": "string"
            },
            "DeploymentURI": {
              "type": "string"
            },
            "OMSworkspaceID": {
              "type": "string"
            },
            "diagLogs": {
              "type": "array"
            },
            "linuxFxVersion": {
              "type": "string",
              "defaultValue": ""
            },
            "Global": {
              "type": "object"
            }
          },
          "functions": [],
          "variables": {
            "MSILookup": {
              "SQL": "Cluster",
              "UTL": "DefaultKeyVault",
              "FIL": "Cluster",
              "OCR": "Storage",
              "PS01": "VMOperator"
            },
            "userAssignedIdentities": {
              "Default": {
                "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', format('{0}-uaiStorageAccountOperator', parameters('Deployment'))))]": {}
              },
              "VMOperator": {
                "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', format('{0}-uaiVMOperator', parameters('Deployment'))))]": {},
                "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities/', format('{0}-uaiKeyVaultSecretsGetApp', parameters('Deployment'))))]": {}
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "apiVersion": "2021-01-01",
              "name": "[format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name)]",
              "identity": {
                "type": "SystemAssigned, UserAssigned",
                "userAssignedIdentities": "[if(contains(variables('MSILookup'), parameters('ws').NAME), variables('userAssignedIdentities')[variables('MSILookup')[parameters('ws').NAME]], variables('userAssignedIdentities').Default)]"
              },
              "kind": "[parameters('ws').kind]",
              "location": "[resourceGroup().location]",
              "properties": {
                "enabled": true,
                "httpsOnly": true,
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp{1}', parameters('Deployment'), parameters('ws').AppSVCPlan))]",
                "siteConfig": {
                  "linuxFxVersion": "[if(empty(parameters('linuxFxVersion')), null(), parameters('linuxFxVersion'))]"
                }
              }
            },
            {
              "condition": "[and(contains(parameters('ws'), 'customDNS'), bool(parameters('ws').customDNS))]",
              "type": "Microsoft.Web/certificates",
              "apiVersion": "2021-02-01",
              "name": "[toLower(format('{0}.{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), parameters('Global').DomainNameExt))]",
              "location": "[resourceGroup().location]",
              "properties": {
                "canonicalName": "[toLower(format('{0}.{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), parameters('Global').DomainNameExt))]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-asp{1}', parameters('Deployment'), parameters('ws').AppSVCPlan))]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
              ]
            },
            {
              "condition": "[and(contains(parameters('ws'), 'customDNS'), bool(parameters('ws').customDNS))]",
              "type": "Microsoft.Web/sites/hostNameBindings",
              "apiVersion": "2021-02-01",
              "name": "[format('{0}/{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), toLower(format('{0}.{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), parameters('Global').DomainNameExt)))]",
              "properties": {
                "siteName": "[format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name)]",
                "hostNameType": "Verified",
                "sslState": "SniEnabled",
                "customHostNameDnsRecordType": "CName",
                "thumbprint": "[reference(resourceId('Microsoft.Web/certificates', toLower(format('{0}.{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), parameters('Global').DomainNameExt)))).thumbprint]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/certificates', toLower(format('{0}.{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), parameters('Global').DomainNameExt)))]",
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
              ]
            },
            {
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2017-05-01-preview",
              "scope": "[format('Microsoft.Web/sites/{0}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]",
              "name": "service",
              "properties": {
                "workspaceId": "[parameters('OMSworkspaceID')]",
                "logs": "[parameters('diagLogs')]",
                "metrics": [
                  {
                    "timeGrain": "PT5M",
                    "enabled": true,
                    "retentionPolicy": {
                      "enabled": false,
                      "days": 0
                    }
                  }
                ]
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
              ]
            },
            {
              "condition": "[contains(parameters('ws'), 'subnet')]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-01-15",
              "name": "[format('{0}/virtualNetwork', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]",
              "properties": {
                "subnetResourceId": "[resourceId('Microsoft.Network/virtualNetworks/subnets', format('{0}-vn', parameters('Deployment')), parameters('ws').subnet)]",
                "swiftSupported": true
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
              ]
            },
            {
              "condition": "[contains(parameters('ws'), 'preWarmedCount')]",
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-01-01",
              "name": "[format('{0}/{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), 'web')]",
              "properties": {
                "preWarmedInstanceCount": "[parameters('ws').preWarmedCount]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
              ]
            },
            {
              "condition": "[and(contains(parameters('ws'), 'customDNS'), bool(parameters('ws').customDNS))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-06-01",
              "name": "[format('setdns-public-{0}-{1}{2}-{3}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name, parameters('Global').DomainNameExt)]",
              "subscriptionId": "[if(contains(parameters('Global'), 'DomainNameExtSubscriptionID'), parameters('Global').DomainNameExtSubscriptionID, parameters('Global').SubscriptionID)]",
              "resourceGroup": "[if(contains(parameters('Global'), 'DomainNameExtRG'), parameters('Global').DomainNameExtRG, parameters('Global').GlobalRGName)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "hostname": {
                    "value": "[toLower(format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
                  },
                  "cname": {
                    "value": "[format('{0}-{1}{2}.azurewebsites.net', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name)]"
                  },
                  "Global": {
                    "value": "[parameters('Global')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1019.29181",
                      "templateHash": "5028337867001056042"
                    }
                  },
                  "parameters": {
                    "hostname": {
                      "type": "string"
                    },
                    "cname": {
                      "type": "string"
                    },
                    "Global": {
                      "type": "object"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Network/dnsZones/CNAME",
                      "apiVersion": "2018-05-01",
                      "name": "[format('{0}/{1}', parameters('Global').DomainNameExt, parameters('hostname'))]",
                      "properties": {
                        "TTL": 3600,
                        "metadata": {},
                        "CNAMERecord": {
                          "cname": "[parameters('cname')]"
                        }
                      }
                    }
                  ]
                }
              }
            },
            {
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-06-01",
              "name": "[format('dp{0}-SA-{1}-FileShare-{2}', parameters('Deployment'), parameters('ws').saname, replace(toLower(format('{0}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))), '-', ''))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "SAName": {
                    "value": "[format('{0}sa{1}', parameters('DeploymentURI'), parameters('ws').saname)]"
                  },
                  "fileShare": {
                    "value": {
                      "name": "[replace(toLower(format('{0}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))), '-', '')]",
                      "quota": 5120
                    }
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.4.1019.29181",
                      "templateHash": "8131062172822447670"
                    }
                  },
                  "parameters": {
                    "SAName": {
                      "type": "string"
                    },
                    "fileShare": {
                      "type": "object"
                    }
                  },
                  "functions": [],
                  "resources": [
                    {
                      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
                      "apiVersion": "2021-04-01",
                      "name": "[format('{0}/{1}/{2}', split(format('{0}/default', parameters('SAName')), '/')[0], split(format('{0}/default', parameters('SAName')), '/')[1], toLower(format('{0}', parameters('fileShare').name)))]",
                      "properties": {
                        "shareQuota": "[parameters('fileShare').quota]",
                        "metadata": {}
                      }
                    }
                  ],
                  "outputs": {
                    "SAFileServiceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Storage/storageAccounts/fileServices', split(format('{0}/default', parameters('SAName')), '/')[0], split(format('{0}/default', parameters('SAName')), '/')[1])]"
                    },
                    "SAFileService": {
                      "type": "string",
                      "value": "[format('{0}/default', parameters('SAName'))]"
                    },
                    "share": {
                      "type": "string",
                      "value": "[toLower(format('{0}', parameters('fileShare').name))]"
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]"
              ]
            }
          ],
          "outputs": {
            "WebSite": {
              "type": "string",
              "value": "[resourceId('Microsoft.Web/sites', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name))]",
              "metadata": {
                "resourceType": "Microsoft.Web/sites@2021-01-01"
              }
            }
          }
        }
      }
    },
    {
      "condition": "[variables('WSInfo')[copyIndex()].match]",
      "copy": {
        "name": "functionAppSettings",
        "count": "[length(variables('WebSiteInfo'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "name": "[format('dp{0}-fn{1}-settings', variables('Deployment'), variables('WebSiteInfo')[copyIndex()].Name)]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "ws": {
            "value": "[variables('WebSiteInfo')[copyIndex()]]"
          },
          "appprefix": {
            "value": "fn"
          },
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "appConfigCustom": {
            "value": "[variables('myAppConfig')]"
          },
          "appConfigCurrent": {
            "value": "[if(variables('WSInfo')[copyIndex()].match, list(resourceId('Microsoft.Web/sites/config', split(format('{0}-fn{1}/appsettings', variables('Deployment'), variables('WebSiteInfo')[copyIndex()].Name), '/')[0], split(format('{0}-fn{1}/appsettings', variables('Deployment'), variables('WebSiteInfo')[copyIndex()].Name), '/')[1]), '2021-01-15').properties, null())]"
          },
          "appConfigNew": {
            "value": {
              "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(variables('AppInsightsID'), '2015-05-01').InstrumentationKey]",
              "APPLICATIONINSIGHTS_CONNECTION_STRING": "[format('InstrumentationKey={0}', reference(variables('AppInsightsID'), '2015-05-01').InstrumentationKey)]",
              "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex()].saname), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex()].saname)), '2021-04-01').keys[0].value)]",
              "AzureWebJobsStorage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex()].saname), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex()].saname)), '2021-04-01').keys[0].value)]",
              "Storage": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex()].saname), listKeys(resourceId('Microsoft.Storage/storageAccounts', format('{0}sa{1}', variables('DeploymentURI'), variables('WebSiteInfo')[copyIndex()].saname)), '2021-04-01').keys[0].value)]",
              "WEBSITE_CONTENTSHARE": "[replace(toLower(format('{0}', variables('WebSiteInfo')[copyIndex()].name)), '-', '')]",
              "WEBSITE_CONTENTOVERVNET": 1,
              "WEBSITE_DNS_SERVER": "[if(empty(variables('DNSServers')[0]), variables('AzureDNS'), variables('DNSServers')[0])]",
              "WEBSITE_VNET_ROUTE_ALL": 1,
              "FUNCTIONS_WORKER_RUNTIME": "[variables('WebSiteInfo')[copyIndex()].runtime]",
              "FUNCTIONS_EXTENSION_VERSION": "~3"
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.4.1019.29181",
              "templateHash": "12697799323170474336"
            }
          },
          "parameters": {
            "ws": {
              "type": "object"
            },
            "appprefix": {
              "type": "string"
            },
            "Deployment": {
              "type": "string"
            },
            "appConfigCustom": {
              "type": "object"
            },
            "appConfigCurrent": {
              "type": "secureObject"
            },
            "appConfigNew": {
              "type": "secureObject"
            }
          },
          "functions": [],
          "resources": [
            {
              "type": "Microsoft.Web/sites/config",
              "apiVersion": "2021-01-15",
              "name": "[format('{0}/{1}', format('{0}-{1}{2}', parameters('Deployment'), parameters('appprefix'), parameters('ws').Name), 'appsettings')]",
              "properties": "[union(parameters('appConfigCustom'), parameters('appConfigCurrent'), parameters('appConfigNew'))]"
            }
          ]
        }
      },
      "dependsOn": [
        // "[format('{0}-{1}{2}', variables('Deployment'), 'fn', variables('WebSiteInfo'))]",
        "[resourceId('Microsoft.Resources/deployments', format('dp{0}-fn{1}', variables('Deployment'), variables('WebSiteInfo')[copyIndex()].Name))]"
      ]
    }
  ]
}