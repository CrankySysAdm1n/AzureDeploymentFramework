{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access artifactsLocation"
      }
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "DevOpsAgentPATToken": {
      "type": "securestring"
    }
  },
  "variables": {
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    "DeploymentURI": "[toLower(concat(parameters('Prefix'),parameters('Global').OrgName,parameters('Global').Appname,parameters('Environment'),parameters('DeploymentID')))]",
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "saInfo": "[parameters('DeploymentInfo').saInfo]",
    "hubRG": "[parameters('Global').hubRGName]",
    "storageLoggingAbstractions": [
      "blobServices",
      "fileServices",
      "queueServices",
      "tableService"
    ]
  },
  "resources": [
    {
      // Deploy the storage account for the Cloud Witness [File/SQL clusters]
      // AZE2-D02-NTE aze2d02ntesa dis01
      "name": "[toLower(concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix))]",
      "type": "Microsoft.Storage/storageAccounts",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-04-01",
      "copy": {
        "name": "SALoop",
        "count": "[length( variables('saInfo') )]"
      },
      "sku": {
        "name": "[variables('saInfo')[copyIndex()].skuName]"
      },
      "dependsOn": [
      ],
      "kind": "StorageV2",
      "properties": {
        "largeFileSharesState": "[if(contains(variables('saInfo')[copyIndex()],'largeFileSharesState'),variables('saInfo')[copyIndex()].largeFileSharesState,json('null'))]",
        "networkAcls": {
          "bypass": "AzureServices",
          "defaultAction": "[if(contains(variables('saInfo')[copyIndex(0)],'allNetworks'),variables('saInfo')[copyIndex(0)].allNetworks,'Allow')]"
          // "ipRules": [
          // ],
          // "virtualNetworkRules": [
          // ]
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "keySource": "Microsoft.Storage",
          "services": {
            "blob": {
              "enabled": true
            },
            "file": {
              "enabled": true
            }
          }
        }
      },
      "resources": [
        {
          "name": "Microsoft.Insights/service",
          "type": "providers/diagnosticSettings",
          "dependsOn": [
            "[concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix)]"
          ],
          "apiVersion": "2017-05-01-preview",
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "metrics": [
              {
                "category": "Capacity",
                "enabled": false,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "Transaction",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        },
        {
          "name": "default/Microsoft.Insights/service",
          "type": "blobServices/providers/diagnosticSettings",
          "location": "[resourceGroup().location]",
          "apiVersion": "2017-05-01-preview",
          "dependsOn": [
            "[concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix)]"
          ],
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "metrics": [
              {
                "category": "Capacity",
                "enabled": false,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "Transaction",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ],
            "logs": [
              {
                "category": "StorageRead",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.r),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageWrite",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.w),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageDelete",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.d),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        },
        {
          "name": "default/Microsoft.Insights/service",
          "type": "fileServices/providers/diagnosticSettings",
          "location": "[resourceGroup().location]",
          "apiVersion": "2017-05-01-preview",
          "dependsOn": [
            "[concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix)]"
          ],
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "metrics": [
              {
                "category": "Capacity",
                "enabled": false,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "Transaction",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ],
            "logs": [
              {
                "category": "StorageRead",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.r),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageWrite",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.w),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageDelete",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.d),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        },
        {
          "name": "default/Microsoft.Insights/service",
          "type": "queueServices/providers/diagnosticSettings",
          "location": "[resourceGroup().location]",
          "apiVersion": "2017-05-01-preview",
          "dependsOn": [
            "[concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix)]"
          ],
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "metrics": [
              {
                "category": "Capacity",
                "enabled": false,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "Transaction",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ],
            "logs": [
              {
                "category": "StorageRead",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.r),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageWrite",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.w),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageDelete",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.d),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        },
        {
          "name": "default/Microsoft.Insights/service",
          "type": "tableServices/providers/diagnosticSettings",
          "location": "[resourceGroup().location]",
          "apiVersion": "2017-05-01-preview",
          "dependsOn": [
            "[concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix)]"
          ],
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "metrics": [
              {
                "category": "Capacity",
                "enabled": false,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "Transaction",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ],
            "logs": [
              {
                "category": "StorageRead",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.r),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageWrite",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.w),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              },
              {
                "category": "StorageDelete",
                "enabled": "[if(contains(variables('saInfo')[copyIndex()],'logging'),bool(variables('saInfo')[copyIndex()].logging.d),bool('false'))]",
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ]
    },
    {
      // Call the nested deployment for the Private Link
      "condition": "[contains(variables('sainfo')[copyIndex(0)],'privatelinkinfo')]",
      "name": "[concat('dp', variables('Deployment'), '-privatelinkloopSA', variables('saInfo')[copyIndex(0)].nameSuffix)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-10-01",
      "dependsOn": [
        "SALoop"
      ],
      "copy": {
        "name": "plLoop",
        "count": "[length( variables('saInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', 'templates-nested/vNetPrivateLink.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "PrivateLinkInfo": {
            "value": "[variables('saInfo')[copyIndex(0)].privateLinkInfo]"
          },
          "providerType": {
            "value": "Microsoft.Storage/storageAccounts"
          },
          "resourceName": {
            "value": "[toLower(concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix))]"
          }
        }
      }
    },
    {
      // Call the nested deployment for the Private Link DNS registration
      "condition": "[contains(variables('sainfo')[copyIndex(0)],'privatelinkinfo')]",
      "name": "[concat('dp', variables('Deployment'), '-registerPrivateDNS', variables('saInfo')[copyIndex(0)].nameSuffix)]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[variables('hubRG')]",
      "apiVersion": "2019-10-01",
      "dependsOn": [
        "plLoop"
      ],
      "copy": {
        "name": "plDNSLoop",
        "count": "[length( variables('saInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', 'templates-nested/registerPrivateLinkDNS.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "PrivateLinkInfo": {
            "value": "[variables('saInfo')[copyIndex(0)].privateLinkInfo]"
          },
          "providerURL": {
            "value": ".core.windows.net/"
          },
          "resourceName": {
            "value": "[toLower(concat(variables('DeploymentURI'),'sa',variables('saInfo')[copyIndex()].nameSuffix))]"
          },
          "Nics": {
            "value": "[if(contains(variables('saInfo')[copyIndex(0)],'privatelinkinfo'),reference(resourceId('Microsoft.Resources/deployments',concat('dp', variables('Deployment'), '-privatelinkloopSA', variables('saInfo')[copyIndex(0)].nameSuffix)),'2018-05-01').outputs.NICID.value,'')]"
          }
        }
      }
    }
  ]
}