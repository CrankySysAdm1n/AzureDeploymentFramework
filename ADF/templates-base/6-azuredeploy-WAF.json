{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access artifactsLocation"
      }
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "DevOpsAgentPATToken": {
      "type": "securestring"
    }
  },
  "variables": {
    // Global  BRWDev101
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    // subscriptionId
    "subscriptionId": "[subscription().subscriptionId]",
    // rgName
    //"resourceGroupName": "[resourceGroup().name]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat(Variables('Deployment'),'-vn'))]",
    "snWAF01Name": "snWAF01",
    "SubnetRefGW": "[concat(variables('VNetID'), '/subnets/', variables('snWAF01Name'))]",
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
    "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",
    "WAFInfo": "[parameters('DeploymentInfo').WAFInfo]",
    
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    
    "WAFPolicyInfo": [
      {
        "name": "API",
        "state": "enabled",
        "mode": "Prevention",
        "ruleSetVersion": "3.0",
        "customRules": [
          {
            "name": "BypassOpenOrder",
            "priority": 100,
            "ruleType": "MatchRule",
            "action": "Allow",
            "matchConditions": [
              {
                "matchVariables": [
                  {
                    "variableName": "RequestUri"
                  }
                ],
                "operator": "Contains",
                "matchValues": [
                  "/admin/maintenance/editor",
                  "/contoso/com/contoso/templatephrases.cfc",
                  "/contoso/includes/ajax/htmlexcelwrapperpopup.cfm",
                  "/contoso/tabqa/chaininfo.cfm",
                  "/contoso/tabqa/submit.cfm",
                  "/contoso/tabqa/sidebar/submit.cfm",
                  "/contoso/wkfmgr_editorder.cfm",
                  "/contoso/wkfmgr_neworder.cfm",
                  "/jakarta/isapi_redirect.dll"
                ],
                "transforms": [
                  "Lowercase"
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "location": "[resourceGroup().location]",
      "apiVersion": "2019-02-01",
      "sku": {
        "name": "Standard"
      },
      "name": "[concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1')]",
      "copy": {
        "name": "PublicIPLoop",
        "count": "[length( variables('WAFInfo') )]"
      },
      "dependsOn": [],
      "properties": {
        "publicIPAllocationMethod": "Static",
        "dnsSettings": {
          "domainNameLabel": "[replace(toLower(concat(variables('Deployment'),'waf',variables('WAFInfo')[copyIndex(0)].WAFName)),'-','')]"
        }
      },
      "resources": [
        {
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "dependsOn": [
            "[concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1')]"
          ],
          "apiVersion": "2015-07-01",
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "logs": [
              {
                "category": "DDoSProtectionNotifications",
                "enabled": true
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT5M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        }
      ]
    },
        {
      "name": "[concat(variables('Deployment'),'-wafPolicy',variables('WAFPolicyInfo')[copyIndex(0)].name)]",
      "type": "Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies",
      "apiVersion": "2019-09-01",
      "location": "[resourceGroup().location]",
      "copy": {
        "name": "WAFLoop",
        "count": "[length( variables('WAFPolicyInfo') )]"
      },
      "properties": {
        "customRules": "[variables('WAFPolicyInfo')[copyIndex(0)].customRules]",
        "policySettings": {
          "fileUploadLimitInMb": 100,
          "maxRequestBodySizeInKb": 128,
          "mode": "[variables('WAFPolicyInfo')[copyIndex(0)].mode]",
          "requestBodyCheck": true,
          "state": "[variables('WAFPolicyInfo')[copyIndex(0)].state]"
        },
        "managedRules": {
          "exclusions": [
          ],
          "managedRuleSets": [
            {
              "ruleSetType": "OWASP",
              "ruleSetVersion": "[variables('WAFPolicyInfo')[copyIndex(0)].ruleSetVersion]",
              "ruleGroupOverrides": [
              ]
            }
          ]
        }
      }
    },
    {
      "name": "[concat('dp', variables('Deployment'), '-wafDeploy', variables('WafInfo')[copyIndex(0)].WAFName)]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1'))]"
      ],
      "copy": {
        "name": "WAFLoop",
        "count": "[length( variables('WafInfo') )]"
      },
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(parameters('_artifactsLocation'), '/', 'templates-nested/waf.json', parameters('_artifactsLocationSasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "Deployment": {
            "value": "[variables('Deployment')]"
          },
          "DeploymentID": {
            "value": "[parameters('DeploymentID')]"
          },
          "Environment": {
            "value": "[parameters('Environment')]"
          },
          "wafInfo": {
            "value": "[variables('WAfInfo')[copyIndex(0)]]"
          },
          "Global": {
            "value": "[parameters('Global')]"
          },
          "OMSworkspaceID": {
            "value": "[variables('OMSworkspaceID')]"
          }
          // "WildcardCertBase64": {
          //   "value": "[parameters('WildcardCertBase64')]"
          // },
          // "WildcardCertBase64Public": {
          //   "value": "[parameters('WildcardCertBase64Public')]"
          // },
          // "WildcardCertBase64Password": {
          //   "value": "[parameters('WildcardCertBase64Password')]"
          // }
        }
      }
    },
    {
      "condition": "[equals(parameters('Stage').SetWAFDNS,1)]",
      "apiVersion": "2020-06-01",
      "name": "[concat('setdns',copyIndex(0))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('global').dnsZoneRGName]",
      "subscriptionId": "[variables('SubscriptionID')]",
      "copy": {
        "name": "WAFDNSLoop",
        "count": "[length( variables('WafInfo') )]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Resources/deployments', concat('dp', variables('Deployment'), '-wafDeploy', variables('WafInfo')[copyIndex(0)].WAFName))]",
        "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "name": "[toLower(concat(parameters('global').DomainNameExt,'/select-',parameters('Environment'),parameters('DeploymentID')))]",
              "apiVersion": "2017-09-01",
              "properties": {
                "metadata": {},
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "[reference(resourceId('Microsoft.network/publicipaddresses',concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1')),'2017-08-01','Full').properties.dnsSettings.fqdn]"
                }
              }
            },
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "name": "[toLower(concat(parameters('global').DomainNameExt,'/yates-',parameters('Environment'),parameters('DeploymentID')))]",
              "apiVersion": "2017-09-01",
              "properties": {
                "metadata": {},
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "[reference(resourceId('Microsoft.network/publicipaddresses',concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1')),'2017-08-01','Full').properties.dnsSettings.fqdn]"
                }
              }
            },
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "name": "[toLower(concat(parameters('global').DomainNameExt,'/sentry-',parameters('Environment'),parameters('DeploymentID')))]",
              "apiVersion": "2017-09-01",
              "properties": {
                "metadata": {},
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "[reference(resourceId('Microsoft.network/publicipaddresses',concat(variables('Deployment'),'-waf',variables('WAFInfo')[copyIndex(0)].WAFName,'-publicip1')),'2017-08-01','Full').properties.dnsSettings.fqdn]"
                }
              }
            }
          ]
        }
      }
    }
  ],
  "outputs": {}
}