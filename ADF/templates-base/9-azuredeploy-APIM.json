{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Prefix": {
      "type": "string",
      "defaultValue": "AZE2",
      "allowedValues": [
        "AZE2",
        "AZC1",
        "AEU2",
        "ACU1"
      ]
    },
    "Environment": {
      "type": "string",
      "defaultValue": "D",
      "allowedValues": [
        "I",
        "D",
        "U",
        "P",
        "S",
        "G",
        "A"
      ]
    },
    "DeploymentID": {
      "type": "string",
      "defaultValue": "1",
      "allowedValues": [
        "0",
        "1",
        "2",
        "3",
        "4",
        "5",
        "6",
        "7",
        "8",
        "9"
      ]
    },
    "Stage": {
      "type": "object"
    },
    "Extensions": {
      "type": "object"
    },
    "Global": {
      "type": "object"
    },
    "DeploymentInfo": {
      "type": "object"
    },
    "_artifactsLocation": {
      "type": "string",
      "metadata": {
        "description": "Auto-generated container in staging storage account to receive post-build staging folder upload"
      }
    },
    "_artifactsLocationSasToken": {
      "type": "securestring",
      "metadata": {
        "description": "Auto-generated token to access artifactsLocation"
      }
    },
    "deploymentTime": {
      "type": "string",
      "defaultValue": "[utcNow()]"
    },
    "vmAdminPassword": {
      "type": "securestring"
    },
    "DevOpsAgentPATToken": {
      "type": "securestring"
    }
  },
  "variables": {
    // Global  BRWDev101
    "Deployment": "[concat(parameters('Prefix'),'-',parameters('Global').OrgName,'-',parameters('Global').Appname,'-',parameters('Environment'),parameters('DeploymentID'))]",
    "subscriptionId": "[subscription().subscriptionId]",
    "resourceGroupName": "[resourceGroup().name]",
    // Network
    "networkId": "[concat(parameters('Global').networkid[0],string(           sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID'))))))]",
    "networkIdUpper": "[concat(parameters('Global').networkid[0],string(add(1,sub(parameters('Global').networkid[1],mul(2,int(parameters('DeploymentID')))))))]",
    "VnetID": "[resourceId('Microsoft.Network/virtualNetworks', concat(Variables('Deployment'),'-vn'))]",
    "SubnetInfo": "[parameters('DeploymentInfo').SubnetInfo]",
    "APIMInfo": "[parameters('DeploymentInfo').APIMInfo]",
    "OMSworkspaceName": "[replace(concat(variables('Deployment'),'LogAnalytics'),'-','')]",
    "OMSworkspaceID": "[resourceid('Microsoft.OperationalInsights/workspaces/',variables('OMSworkspaceName'))]",
    "AppInsightsName": "[replace(concat(variables('Deployment'),'AppInsights'),'-','')]",
    "userAssignedIdentities": {
      "Default": {
        "[resourceID('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet'))]": {
        }
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.ApiManagement/service",
      "sku": {
        "name": "[variables('APIMInfo')[copyIndex(0)].apimSku]",
        "capacity": 1
      },
      "name": "[concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name)]",
      "apiVersion": "2020-06-01-preview",
      "location": "[resourceGroup().location]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": "[variables('userAssignedIdentities')['Default']]"
      },
      "copy": {
        "name": "apimLoop",
        "count": "[length(variables('APIMInfo'))]"
      },
      "properties": {
        "publisherEmail": "[parameters('global').apimPublisherEmail]",
        "publisherName": "[parameters('global').apimPublisherEmail]",
        "hostnameConfigurations": [
          {
            "type": "Proxy",
            "hostName": "[if(contains(variables('APIMInfo')[copyIndex(0)],'frontDoor'),
                          tolower(concat(variables('Deployment'),'-afd',variables('APIMInfo')[copyIndex(0)].frontDoor,'-apim',variables('APIMInfo')[copyIndex(0)].name,'-gateway','.',parameters('Global').DomainNameExt)),
                          tolower(concat(variables('Deployment')                                                     ,'-apim',variables('APIMInfo')[copyIndex(0)].name,'-gateway','.',parameters('Global').DomainNameExt))
                          )]",
            "identityClientId": "[reference(resourceid('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet')),'2018-11-30').clientId]",
            "keyVaultId": "[concat(parameters('Global').KVUrl,'secrets/',variables('APIMInfo')[copyIndex(0)].certName)]"
            // acu1-brw-aoa-s1-afd01-apim01-gateway.psthing.com  behind AFD
            // acu1-brw-aoa-s1-apim01-gateway.psthing.com       not behind AFD
          },
          {
            "type": "DeveloperPortal",
            "hostName": "[if(contains(variables('APIMInfo')[copyIndex(0)],'frontDoor'),
                          tolower(concat(variables('Deployment'),'-afd',variables('APIMInfo')[copyIndex(0)].frontDoor,'-apim',variables('APIMInfo')[copyIndex(0)].name,'.',parameters('Global').DomainNameExt)),
                          tolower(concat(variables('Deployment')                                                     ,'-apim',variables('APIMInfo')[copyIndex(0)].name,'.',parameters('Global').DomainNameExt))
                          )]",
            "identityClientId": "[reference(resourceid('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet')),'2018-11-30').clientId]",
            "keyVaultId": "[concat(parameters('Global').KVUrl,'secrets/',variables('APIMInfo')[copyIndex(0)].certName)]"
            // acu1-brw-aoa-s1-afd01-apim01.psthing.com  behind AFD
            // acu1-brw-aoa-s1-apim01.psthing.com       not behind AFD
          }
        ],
        "runtimeUrl": "[tolower(concat('https://', variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].Name,'.azure-api.net'))]",
        "portalUrl": "[tolower(concat('https://', variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].Name,'.portal.azure-api.net'))]",
        "managementApiUrl": "[tolower(concat('https://', variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].Name,'.management.azure-api.net'))]",
        "scmUrl": "[tolower(concat('https://', variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].Name,'.scm.azure-api.net'))]",
        "customProperties": {
          "subnetAddress": "[reference(concat(variables('VNetID'), '/subnets/sn', variables('APIMInfo')[copyIndex(0)].snName), '2015-06-15').addressprefix]"
        },
        "VirtualNetworkType": "[variables('APIMInfo')[copyIndex(0)].VirtualNetworkType]",
        "virtualNetworkConfiguration": {
          "subnetResourceId": "[concat(variables('VNetID'), '/subnets/sn', variables('APIMInfo')[copyIndex(0)].snName)]"
          //"location": "[resourceGroup().location]"
          //"vnetid": "[variables('VNetID')]",
          //"subnetname": "[concat('sn', variables('APIMInfo')[copyIndex(0)].snName)]"
        }
      },
      "resources": [
        {
          "type": "loggers",
          "apiVersion": "2020-06-01-preview",
          "name": "[variables('AppInsightsName')]",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
          ],
          "properties": {
            "loggerType": "applicationInsights",
            "description": "Application Insights logger",
            "credentials": {
              "instrumentationKey": "{{logAnalyticsKey}}"

            },
            "isBuffered": true,
            "resourceId": "[resourceId('microsoft.insights/components',variables('AppInsightsName'))]"
          }
        },
        {
          "type": "namedValues",
          "apiVersion": "2020-06-01-preview",
          "name": "logAnalyticsKey",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
          ],
          "properties": {
            "displayName": "logAnalyticsKey",
            "secret": true,
            "value": "[reference(resourceId('Microsoft.Insights/components', variables('AppInsightsName')), '2014-04-01').InstrumentationKey]"
          }
        },
        {
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
          ],
          "apiVersion": "2015-07-01",
          "properties": {
            "workspaceId": "[variables('OMSworkspaceID')]",
            "logs": [
              {
                "category": "GatewayLogs",
                "enabled": true,
                "retentionPolicy": {
                  "days": 30,
                  "enabled": false
                }
              }
            ],
            "metrics": [
              {
                "timeGrain": "PT5M",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": 0
                }
              }
            ]
          }
        },
        {
          "name": "WildcardCert",
          "type": "certificates",
          "apiVersion": "2020-06-01-preview",
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
          ],
          "properties": {
            "keyVault": {
              "secretIdentifier": "[parameters('Global').certificateUrl]",
              "identityClientId": "[reference(resourceid('Microsoft.ManagedIdentity/userAssignedIdentities/',concat(variables('Deployment'),'-uaiKeyVaultSecretsGet')),'2018-11-30').clientId]"
            }
          }
        },
        // {
        //   "apiVersion": "2017-03-01",
        //   "type": "backends",
        //   "name": "Commands",
        //   "dependsOn": [
        //     "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
        //     // "[resourceId('Microsoft.ApiManagement/service/certificates',concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name),'multidomaincert')]"
        //   ],
        //   "properties": {
        //     "description": "commands",
        //     "url": "fabric:/contoso.Commands",
        //     "protocol": "http",
        //     "resourceId": "[tolower(concat('https://cto',parameters('Environment'),parameters('DeploymentID'),'sf01.',parameters('Global').DomainName))]",
        //     "properties": {
        //       "serviceFabricCluster": {
        //         "managementEndpoints": [
        //           "[tolower(concat('https://cto',parameters('Environment'),parameters('DeploymentID'),'sf01.',parameters('Global').DomainName))]"
        //         ],
        //         "clientCertificatethumbprint": "[parameters('global').certificateThumbprint]",
        //         "serverCertificatethumbprints": [
        //           "[parameters('Global').certificateThumbprint]"
        //         ],
        //         "maxPartitionResolutionRetries": 5
        //       }
        //     }
        //   }
        // },
        {
          "name": "Public",
          "type": "products",
          "apiVersion": "2020-06-01-preview",
          "properties": {
            "subscriptionRequired": false,
            "state": "published",
            "displayName": "Public"
          },
          "dependsOn": [
            "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
          ]
        }
      ]
    },
    {
      "condition": "[equals(parameters('Stage').SetInternalDNS,1)]",
      "apiVersion": "2020-06-01",
      "name": "[concat('setdns',copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[parameters('Global').HubRGName]",
      "subscriptionId": "[parameters('global').SubscriptionID]",
      "copy": {
        "name": "apimLoop",
        "count": "[length(variables('APIMInfo'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/privateDnsZones/CNAME",
              "name": "[toLower(concat(parameters('global').DomainName,'/',variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].name,'.',parameters('Global').DomainNameExt))]",
              "apiVersion": "2020-06-01",
              "properties": {
                "metadata": {},
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "[tolower(concat(variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].name,'-gateway','.',parameters('Global').DomainNameExt))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/privateDnsZones/A",
              "name": "[tolower(concat(parameters('global').DomainName,'/',variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].name,'-gateway','.',parameters('Global').DomainNameExt))]",
              "apiVersion": "2020-06-01",
              "location": "global",
              "dependsOn": [],
              "properties": {
                "TTL": 3600,
                "ARecords": [
                  {
                    "ipv4Address": "[reference(resourceId(variables('resourceGroupName'),'Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name)),'2018-01-01','Full').properties.publicIPAddresses[0]]"
                  }
                ]
              }
            }
          ]
        }
      }
    },
    {
      "condition": "[equals(parameters('Stage').SetExternalDNS,1)]",
      "apiVersion": "2020-06-01",
      "name": "[concat('setdns',copyIndex(1))]",
      "type": "Microsoft.Resources/deployments",
      "resourceGroup": "[if(contains(parameters('global'),'DomainNameExtRG'),parameters('global').DomainNameExtRG,parameters('global').GlobalRGName)]",
      "subscriptionId": "[if(contains(parameters('global'),'DomainNameExtSubscriptionID'),parameters('global').DomainNameExtSubscriptionID,parameters('global').SubscriptionID)]",
      "copy": {
        "name": "apimLoop",
        "count": "[length(variables('APIMInfo'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Network/dnsZones/CNAME",
              "name": "[toLower(concat(parameters('global').DomainNameExt,'/',variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].name,'.',parameters('Global').DomainNameExt))]",
              "apiVersion": "2018-05-01",
              "properties": {
                "metadata": {},
                "TTL": 3600,
                "CNAMERecord": {
                  "cname": "[tolower(concat(variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].name,'-gateway','.',parameters('Global').DomainNameExt))]"
                }
              }
            },
            {
              "type": "Microsoft.Network/dnszones/a",
              "name": "[tolower(concat(parameters('global').DomainNameExt,'/',variables('Deployment'),'-apim',variables('APIMInfo')[copyIndex(0)].name,'-gateway','.',parameters('Global').DomainNameExt))]",
              "apiVersion": "2018-05-01",
              "location": "global",
              "dependsOn": [],
              "properties": {
                "TTL": 3600,
                "ARecords": [
                  {
                    "ipv4Address": "[reference(resourceId(variables('resourceGroupName'),'Microsoft.ApiManagement/service', concat(variables('Deployment'), '-apim', variables('APIMInfo')[copyIndex(0)].Name)),'2018-01-01','Full').properties.publicIPAddresses[0]]"
                  }
                ]
              }
            }
          ]
        }
      }
    }
  ]
}